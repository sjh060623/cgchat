{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","width","height","style","marginBottom","icon","faGoogle","Nweet","nweetObj","isOwner","userObj","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","color","faPencilAlt","NweetFactory","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","displayName","createdAt","Date","now","creatorId","collection","add","maxLength","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","nweetArray","docs","map","marginTop","key","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","paddingTop","AppRouter","isLoggedIn","maxWidth","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d6a43ec.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\nimport \"firebase/compat/auth\";\nimport \"firebase/compat/firestore\";\nimport \"firebase/compat/storage\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDee4XzSq34cpQHUCbTrm6huwet9EWeJLI\",\n    authDomain: \"cgchat-4af30.firebaseapp.com\",\n    projectId: \"cgchat-4af30\",\n    storageBucket: \"cgchat-4af30.appspot.com\",\n    messagingSenderId: \"98237376669\",\n    appId: \"1:98237376669:web:8640d6a5fee6a3ff35cc74\"\n  };\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\n\nconst inputStyles = {};\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"이메일\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"\"\n          placeholder=\"비밀번호\"\n          required\n          value={password}\n          className=\"authInput\"\n          onChange={onChange}\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? \"계정 만들기\" : \"로그인\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"로그인\" : \"계정 만들기\"}\n      </span>\n    </>\n  );\n};\nexport default AuthForm;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n  return (\n    <div className=\"authContainer\">\n      \n      <img\n        width={80}\n        height={80}\n        style={{ marginBottom: 20 }}\n        \n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst Nweet = ({ nweetObj, isOwner, userObj }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"삭제하시겠습니까?\");\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input\n              type=\"text\"\n              placeholder=\"수정\"\n              value={newNweet}\n              required\n              autoFocus\n              onChange={onChange}\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"수정하기\" className=\"formBtn\" />\n          </form>\n          <span onClick={toggleEditing} className=\"cancelBtn\">\n            취소\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\n          {isOwner && (\n            <div class=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} color=\"black\" />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} color=\"black\"  />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { storageService, dbService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (nweet === \"\") {\n      return;\n    }\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: `${userObj.displayName} : ${nweet}`,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"nweets\").add(nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    if (Boolean(theFile)) {\n      reader.readAsDataURL(theFile);\n    }\n  };\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"눌러서 입력\"\n          maxLength={150}\n        />\n        <input type=\"submit\" value=\"+\" className=\"factoryInput__arrow\" />\n      </div>\n    </form>\n  );\n};\nexport default NweetFactory;\n","import React, { useState, useEffect } from \"react\";\nimport { dbService } from \"fbase\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n  useEffect(() => {\n    dbService\n      .collection(\"nweets\")\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((snapshot) => {\n        const nweetArray = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setNweets(nweetArray);\n      });\n  }, []);\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {nweets.map((nweet) => (\n          <Nweet\n            userObj={userObj}\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          autoFocus\n          placeholder=\"닉네임\"\n          value={newDisplayName}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"변경\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        로그아웃\n      </span>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <h1>Chat</h1>\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <h1 style={{ marginLeft: 30 }}>\n          Profile\n          </h1>\n        </Link>\n        <h3 style={{paddingTop:30, }}>            {\" \"}\n            {userObj.displayName\n              ? `User : ${userObj.displayName}`\n              : \"None\"}</h3>\n      </li>\n      \n    </ul>\n    \n  </nav>\n);\nexport default Navigation;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\nexport default AppRouter;\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"로그인 중...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}